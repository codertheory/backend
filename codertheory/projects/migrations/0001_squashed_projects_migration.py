# Generated by Django 3.1.1 on 2020-09-03 20:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import codertheory.general.custom_fields
import codertheory.general.generator


class Migration(migrations.Migration):
    replaces = [('projects', '0001_initial'), ('projects', '0002_project_slug'),
                ('projects', '0003_auto_20200903_2038'), ('projects', '0004_auto_20200903_2040')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', codertheory.general.custom_fields.NanoIDField(auto_created=True,
                                                                     default=codertheory.general.generator.generate_id,
                                                                     editable=False, max_length=10, primary_key=True,
                                                                     serialize=False)),
                ('name', models.TextField()),
                ('description', models.TextField(null=True)),
                ('created_at', models.DateTimeField()),
                ('last_updated_at', models.DateTimeField(null=True)),
                ('link', models.URLField(null=True)),
                ('current_version', models.CharField(max_length=100)),
                ('status', models.CharField(
                    choices=[('UnActive', 'UnActive'), ('Active', 'Active'), ('Archived', 'Archived'),
                             ('Backlog', 'Backlog')], default='UnActive', max_length=25)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectChangeLog',
            fields=[
                ('id', codertheory.general.custom_fields.NanoIDField(auto_created=True,
                                                                     default=codertheory.general.generator.generate_id,
                                                                     editable=False, max_length=10, primary_key=True,
                                                                     serialize=False)),
                ('version', models.CharField(max_length=100)),
                ('updated_at', models.DateTimeField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='MobileProject',
            fields=[
                ('project_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='projects.project')),
                ('logo', models.ImageField(null=True, upload_to='')),
                ('thumbnail', models.ImageField(height_field=590, upload_to='', width_field=360)),
                ('app_store_url', models.URLField(null=True)),
                ('play_store_url', models.URLField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('projects.project',),
        ),
        migrations.CreateModel(
            name='TaskBoard',
            fields=[
                ('created', models.DateTimeField(auto_created=True, auto_now=True)),
                ('id', codertheory.general.custom_fields.NanoIDField(auto_created=True,
                                                                     default=codertheory.general.generator.generate_id,
                                                                     editable=False, max_length=10, primary_key=True,
                                                                     serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', codertheory.general.custom_fields.NanoIDField(auto_created=True,
                                                                     default=codertheory.general.generator.generate_id,
                                                                     editable=False, max_length=10, primary_key=True,
                                                                     serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(
                    choices=[('InProgress', 'InProgress'), ('Finished', 'Finished'), ('Ignored', 'Ignored')],
                    max_length=25, null=True)),
                ('unread', models.BooleanField(default=False)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('board',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.taskboard')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', codertheory.general.custom_fields.NanoIDField(auto_created=True,
                                                                     default=codertheory.general.generator.generate_id,
                                                                     editable=False, max_length=10, primary_key=True,
                                                                     serialize=False)),
                ('image', models.ImageField(height_field=590, upload_to='', width_field=360)),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectFeedBack',
            fields=[
                ('posted_at', models.DateTimeField(auto_created=True)),
                ('id', codertheory.general.custom_fields.NanoIDField(auto_created=True,
                                                                     default=codertheory.general.generator.generate_id,
                                                                     editable=False, max_length=10, primary_key=True,
                                                                     serialize=False)),
                ('comment', models.TextField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFeature',
            fields=[
                ('id', codertheory.general.custom_fields.NanoIDField(auto_created=True,
                                                                     default=codertheory.general.generator.generate_id,
                                                                     editable=False, max_length=10, primary_key=True,
                                                                     serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectChangeLogFiledDiff',
            fields=[
                ('id', codertheory.general.custom_fields.NanoIDField(auto_created=True,
                                                                     default=codertheory.general.generator.generate_id,
                                                                     editable=False, max_length=10, primary_key=True,
                                                                     serialize=False)),
                ('filename', models.TextField()),
                ('type', models.CharField(choices=[('New', 'New'), ('Updated', 'Updated'), ('Removed', 'Removed')],
                                          max_length=25)),
                ('project',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.projectchangelog')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectChangeLogEntry',
            fields=[
                ('id', codertheory.general.custom_fields.NanoIDField(auto_created=True,
                                                                     default=codertheory.general.generator.generate_id,
                                                                     editable=False, max_length=10, primary_key=True,
                                                                     serialize=False)),
                ('type',
                 models.CharField(choices=[('Feature', 'Feature'), ('Improvement', 'Improvement'), ('Fix', 'Fix')],
                                  max_length=25)),
                ('description', models.TextField()),
                ('project',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.projectchangelog')),
            ],
        ),
        migrations.AddIndex(
            model_name='projectfeedback',
            index=models.Index(fields=['-posted_at'], name='projects_pr_posted__0f4b23_idx'),
        ),
        migrations.AddIndex(
            model_name='projectfeature',
            index=models.Index(fields=['title'], name='projects_pr_title_c6b024_idx'),
        ),
        migrations.AddIndex(
            model_name='projectchangelogfileddiff',
            index=models.Index(fields=['type'], name='projects_pr_type_e252db_idx'),
        ),
        migrations.AddIndex(
            model_name='projectchangelogentry',
            index=models.Index(fields=['type'], name='projects_pr_type_87b0cb_idx'),
        ),
        migrations.AddIndex(
            model_name='projectchangelog',
            index=models.Index(fields=['version'], name='projects_pr_version_2144f9_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['name', '-created_at', '-last_updated_at'], name='projects_pr_name_28f120_idx'),
        ),
        migrations.AlterField(
            model_name='project',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='project',
            name='last_updated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='project',
            name='link',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='project',
            name='status',
            field=models.CharField(choices=[('UnActive', 'Unactive'), ('Active', 'Active'), ('Archived', 'Archived'),
                                            ('Backlog', 'Backlog')], default='UnActive', max_length=25),
        ),
        migrations.AlterField(
            model_name='project',
            name='name',
            field=models.CharField(max_length=125),
        ),
        migrations.AddField(
            model_name='project',
            name='slug',
            field=models.SlugField(max_length=15, null=True),
        ),
    ]
